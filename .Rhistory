install.packages("stm")
data 
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
ls("stm")
ls("package:stm")
search()
help(package = stm)
library()
search()
require("stm")
search()
processed <- textProcessor(data$posting_body, metadata = data)
install.packages("tm")
processed <- textProcessor(data$posting_body, metadata = data)
q()
search()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
q()
data <- read.csv("./csv_dumps/chicago_complete.csv")
require("stm")
processed <- textProcessor(data$posting_body, metadata = data)
 package.update("PCRE")
package.install("PCRE")
packages.install("PCRE")
install.packages("PCRE")
install.packages("PCRE2")
q()
pcretest -C
q()
pcre_config()
pcre_config(True, True, False, True)
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
q()
pcre_config()
pcre2_config()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
pcre2_compile()
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
pcre_config()
if(!require(devtools)) install.packages("devtools")
search()
library()
library(devtools)
install_github("bstewart/stm",dependencies=TRUE)
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
require("stm")
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
library()
pcre_config()
sessionInfo()
extSoftVersion()
pcreunicode()
AC_ARG_ENABLE(unicode-properties,
              AS_HELP_STRING([--enable-unicode-properties],
                             [enable Unicode properties support (implies --enable-utf)]),
unicode-properties()
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
pcre_config()
q()
pcre_config()
require("stm")
install.packages("stm")
q()
pcre_config()
q()
pcre_config()
q()
pcre_config()
q()
pcre_config()
install.packages("stm")
install.packages("glmnet")
sessionInfo()
install.packages("glmnet",repos="http://cran.us.r-project.org")
install.packages("testthat")
install.packages("glmnet", repos = "https://cran.us.r-project.org")
install.packages("elnet")
install.packages("glmnet", dependencies=TRUE)
install.packages("glmnet", dependencies=TRUE)
install.packages("glmnet", repos = "https://cran.us.r-project.org")
update.packages()
install.packages("glmnet", repos = "https://cran.us.r-project.org")
install.packages("glmnet", repos = "https://cran.us.r-project.org") -fpermissive
install.packages("glmnet", repos = "http://cran.us.r-project.org")
q()
install.packages("glmnet", repos = "http://cran.us.r-project.org")
help(elnet)
install.packages("elnet")
install.packages("glmnet", repos = "http://cran.us.r-project.org")
install.packages("RcppExports")
install.packages("Rcpp")
install.packages("glmnet", repos = "http://cran.us.r-project.org")
update.packages("RcppEigen")
update.packages("Rcpp")
installed.packages()
search()
require("Rccp")
require("Rcpp")
install.packages("glmnet", repos = "http://cran.us.r-project.org")
install.packages("devtools")
install.packages("glmnet", dependencies=TRUE)
q()
library()
install.packages("glmnet", dependencies=TRUE)
q()
install.packages("glmnet", dependencies=TRUE)
q()
install.packages("glmnet", dependencies=TRUE)
install.packages("glmnet", type="source")
q()
pcre_config()
install.packages("stm")
install.packages("glmnet", type="source")
q()
install.packages("stm")
pcre_config()
q()
pcre_config()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$posting_body, metadata = data)
out <- prepDocuments(processed$documents, processed$vocab,
+ processed$meta)
out <- prepDocuments(processed$documents, processed$vocab,processed$meta)
out <- prepDocuments(processed$posting_body, processed$vocab,processed$meta)
processed
data
processed <- textProcessor(data$posting_body, metadata = data)
q()
sessionInfo()
extSoftVersion()
q()
install.packages("stm")
q()
extSoftVersion()
pcre_config()
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
q()
require("stm")
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
q()
require("stm")
q()
require("stm")
q()
extSoftVersion()
pcre_config()
require("stm")
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
plotRemoved(processed$documents, lower.thresh = seq(1,200, by = 100))
q()
q()[A
install.packages("igraph")
q()
require("stm")
data <- read.csv("./csv_dumps/chicago_complete.csv")
values_count <- sapply(lapply(data,unique), length)
values_count
q()
require("stm")
install.packages("igraph")
install.packages("sjplot")
install.packages("sjPlot")
install.packages("nloptr")
install.packages("nlopt")
update.packates("CMake")
update.packages("CMake")
install.packages("nlopt")
install.packages("nloptr")
update.packages("cmake")
install.packages("CMake")
install.packages("cmake")
install.packages("cmake3")
install.CMake(
  URL = "https://github.com/Kitware/CMake/releases",
  cmake_version = 3.2,
  ...
)
install.CMake()
q()
install.packages("tm")
q()
pcre_config()
q()
pcre_config()
q()
q()
require("stm")
data <- read.csv("./csv_dumps/all_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta,lower.thresh = 12)
meta <- out$meta
prevFit <- stm(documents = out$documents, vocab = out$vocab, K = 7, prevalence =~ race * poverty, max.em.its = 200, data = meta, init.type = "Spectral")
labelTopics(prevFit)
prep <- estimateEffect(1:7 ~ race * poverty, prevFit, meta = meta, uncertainty = "Global")
summary(prep)
plot(prevFit,type="labels")
z<- data$documents[-processed$docs.removed]
y<-z[-out$docs.removed]
thoughts1 <- findThoughts(prevFit,texts = y, n=2, topics = 1)$docs[[1]]
plotQuote(thoughts1, width = 30, main = "Topic 1")
par(mfrow = c(1,2),mar = c(0.5,0.5,1,0.5))
plotQuote(thoughts1, width = 30, main = "Topic 1")
plotQuote(thoughts1, width = 30, main = "Topic 1")
plotQuote(thoughts1, width = 30, main = "Topic 1")
contentFit <- stm(documents = out$documents, vocab = out$vocab, K = 7, prevalence =~ is_white * poverty, content =~ is_white, max.em.its = 200, data = meta, init.type = "Spectral")
plot(contentFit, type = "perspectives",topics = 1)
prep <- estimateEffect(1:7 ~ is_white * poverty, prevFit, meta = meta, uncertainty = "Global")
prep <- estimateEffect(1:7 ~ is_white * poverty, contentFit, meta = meta, uncertainty = "Global")
summary(prep)
q()
require("stm")
data <- read.csv("./csv_dumps/all_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
data <- read.csv("./csv_dumps/all_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
data <- read.csv("./csv_dumps/all_complete.csv")
processed <- textProcessor(data$documents, metadata = data)
data <- na.omit(data)
processed <- textProcessor(data$documents, metadata = data)
q()
